# coding: utf-8

"""
    Passage Management API

    Passage's management API to manage your Passage apps and users.

    The version of the OpenAPI document: 1
    Contact: support@passage.id
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.magic_link_response import MagicLinkResponse

class TestMagicLinkResponse(unittest.TestCase):
    """MagicLinkResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MagicLinkResponse:
        """Test MagicLinkResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MagicLinkResponse`
        """
        model = MagicLinkResponse()
        if include_optional:
            return MagicLinkResponse(
                magic_link = openapi_client.models.magic_link.MagicLink(
                    activated = True, 
                    app_id = '', 
                    id = '', 
                    identifier = '', 
                    redirect_url = '', 
                    secret = '', 
                    ttl = 56, 
                    type = 'login', 
                    url = '', 
                    user_id = '', )
            )
        else:
            return MagicLinkResponse(
                magic_link = openapi_client.models.magic_link.MagicLink(
                    activated = True, 
                    app_id = '', 
                    id = '', 
                    identifier = '', 
                    redirect_url = '', 
                    secret = '', 
                    ttl = 56, 
                    type = 'login', 
                    url = '', 
                    user_id = '', ),
        )
        """

    def testMagicLinkResponse(self):
        """Test MagicLinkResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
